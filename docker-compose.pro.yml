version: '3.7'
services:
  web:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage
    environment:
      - APP_ENV=production

  mongo-db-1:
    container_name: mongo-db-1
    volumes:
      - ${LOCAL_MONGO_DB_PATH_NODE1}:/data/db
    environment:
      - APP_ENV=production
    command: mongod --replSet $MONGODB_REPLICA_SET --auth

  elasticsearch-mongo-connector:
    restart: unless-stopped
    command: mongo-connector --auto-commit-interval=0 --stdout --admin-username $MONGO_INITDB_ROOT_USERNAME --password $MONGO_INITDB_ROOT_PASSWORD -m mongo-db-1:27017 -t http://elasticsearch-worker-1:9200 -d "elastic2_doc_manager" -c ./mongo-connector-config.json

  elasticsearch-worker-1:
    environment:
      - node.name=elasticsearch-worker-1
      - cluster.name=es-docker-cluster
      - network.publish_host=elasticsearch-worker-1
      - discovery.seed_hosts=elasticsearch-worker-1
      - discovery.type=single-node
    volumes:
      - $PWD/env/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ${ELASTIC_SEARCH_DB_PATH}node1/:/usr/share/elasticsearch/data/
    ports:
      - "127.0.0.1:9200:9200"

#  elasticsearch-worker-1:
#    volumes:
#      - $PWD/env/elasticsearch/config/elasticsearch_node_1.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ${ELASTIC_SEARCH_DB_PATH}node1/:/usr/share/elasticsearch/data/
#    environment:
#      - node.name=elasticsearch-worker-1
#      - cluster.name=es-docker-cluster
#      - network.publish_host=elasticsearch-worker-1
#      - discovery.seed_hosts=elasticsearch-worker-1,elasticsearch-worker-2,elasticsearch-worker-3
#      - cluster.initial_master_nodes=elasticsearch-worker-1,elasticsearch-worker-2,elasticsearch-worker-3
#    ports:
#      - "127.0.0.1:9200:9200"

#  elasticsearch-worker-2:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
#    container_name: elasticsearch-worker-2
#    restart: unless-stopped
#    environment:
#      - node.name=elasticsearch-worker-2
#      - cluster.name=es-docker-cluster
#      - network.publish_host=elasticsearch-worker-2
#      - discovery.seed_hosts=elasticsearch-worker-1,elasticsearch-worker-2,elasticsearch-worker-3
#      - cluster.initial_master_nodes=elasticsearch-worker-1,elasticsearch-worker-2,elasticsearch-worker-3
#    volumes:
#      - $PWD/env/elasticsearch/config/elasticsearch_node_2.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ${ELASTIC_SEARCH_DB_PATH}node2/:/usr/share/elasticsearch/data/
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    depends_on:
#      - mongo-db-1
#    networks:
#      - elastic
#
#  elasticsearch-worker-3:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
#    container_name: elasticsearch-worker-3
#    restart: unless-stopped
#    environment:
#      - node.name=elasticsearch-worker-3
#      - cluster.name=es-docker-cluster
#      - network.publish_host=elasticsearch-worker-3
#      - discovery.seed_hosts=elasticsearch-worker-1,elasticsearch-worker-2,elasticsearch-worker-3
#      - cluster.initial_master_nodes=elasticsearch-worker-1,elasticsearch-worker-2,elasticsearch-worker-3
#    volumes:
#      - $PWD/env/elasticsearch/config/elasticsearch_node_3.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ${ELASTIC_SEARCH_DB_PATH}node3/:/usr/share/elasticsearch/data/
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    depends_on:
#      - mongo-db-1
#    networks:
#      - elastic

  nginx:
    volumes:
      - $PWD/env/certbot/conf:/etc/letsencrypt
      - $PWD/env/certbot/www:/var/www/certbot

  redis:
    container_name: redis
    volumes:
      - ${REDIS_DB_PATH}:/var/lib/redis
      - ${REDIS_CONFIG_PATH}:/usr/local/etc/redis/redis.conf

  firmware-worker:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  firmware-worker-high-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage


  fuzzyhash-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  firmware-worker-default-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  androguard-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  androwarn-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  apkid-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  exodus-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  frida-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  qark-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  quark_engine-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  virustotal-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  super-android-analyzer-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  apkleaks-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  firmware-worker-default-2:
    build:
      context: .
      dockerfile: ./docker/workers/Dockerfile_firmware
    container_name: firmware-worker-default-2
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage
    env_file:
      - ./.env
    command: rqworker --name firmware-worker-default-2 --url redis://redis:6379/ default
    networks:
      - backend

  libradar-worker-1:
    volumes:
      - ${LOCAL_STORAGE_PATH}:/var/www/file_store/00_file_storage

  certbot:
    image: certbot/certbot:latest
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=${CERT_WEBROOT_PATH} --email ${CERT_EMAIL} --agree-tos --no-eff-email -d ${CERT_DOMAIN}
    volumes:
      - $PWD/env/certbot/conf:/etc/letsencrypt
      - $PWD/env/certbot/logs:/var/log/letsencrypt
      - $PWD/env/certbot/data:/var/www/certbot