FROM openjdk:8-jdk-slim-buster as apk_scanner-worker
COPY --from=firmwaredroid-base / /
#FROM firmwaredroid-base as apk_scanner-worker
#ENV PYTHONPATH "/var/www/source/:$PYTHONPATH"



#####################################
# Installing apktool                #
#####################################
RUN APKTOOL_VERSION=$(curl -s "https://api.github.com/repos/iBotPeaches/Apktool/releases/latest"  \
    | grep -Po '"tag_name": "v\K[0-9.]+')  \
    && curl -Lo /usr/local/bin/apktool.jar "https://github.com/iBotPeaches/Apktool/releases/latest/download/apktool_${APKTOOL_VERSION}.jar"
RUN curl -o /usr/local/bin/apktool https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool
RUN chmod a+x /usr/local/bin/apktool.jar && chmod a+x /usr/local/bin/apktool

#####################################
# Installing jadx                   #
#####################################
RUN mkdir -p /tmp/jadx-temp/jadx/ && mkdir -p /opt/jadx/bin
WORKDIR /tmp/jadx-temp/
RUN JADX_VERSION=$(curl -s "https://api.github.com/repos/skylot/jadx/releases/latest"  \
    | grep -Po '"tag_name": "v\K[0-9.]+')  \
    && curl -Lo jadx.zip "https://github.com/skylot/jadx/releases/latest/download/jadx-${JADX_VERSION}.zip"
RUN unzip jadx.zip -d /tmp/jadx-temp/
RUN mv /tmp/jadx-temp/* /opt/jadx/
ENV JADX "/opt/jadx/bin"
ENV PATH "${JADX}:${PATH}"
RUN export PATH=$PATH
#RUN jadx --version
#####################################
# Installing apktool                #
#####################################
ENV PYTHONPATH "/var/www/source/:$PYTHONPATH"
WORKDIR /var/www/source/

##################################################
# Installing python-based static-analysis tools  #
##################################################
RUN python3 /var/www/docker/setup_apk_scanner.py

#RUN --mount=type=cache,target=/var/www/tmp/.cache \
#    pip install -r /var/www/requirements/requirements_apk_scanner



