services:
  web:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: docker/base/Dockerfile_backend
    image: backend-worker
    container_name: backend-worker
    working_dir: /var/www/
    restart: unless-stopped
    env_file:
      - ./.env
    expose:
      - 5000
    volumes:
      - .:/var/www/
      - ${LOCAL_STORAGE_PATH_00}:/var/www/file_store/00_file_storage
      - ${LOCAL_STORAGE_PATH_01}:/var/www/file_store/01_file_storage
      - ${LOCAL_STORAGE_PATH_02}:/var/www/file_store/02_file_storage
      - ${LOCAL_STORAGE_PATH_03}:/var/www/file_store/03_file_storage
      - ${LOCAL_STORAGE_PATH_04}:/var/www/file_store/04_file_storage
      - ${LOCAL_STORAGE_PATH_05}:/var/www/file_store/05_file_storage
      - ${LOCAL_STORAGE_PATH_06}:/var/www/file_store/06_file_storage
      - ${LOCAL_STORAGE_PATH_07}:/var/www/file_store/07_file_storage
      - ${LOCAL_STORAGE_PATH_08}:/var/www/file_store/08_file_storage
      - ${LOCAL_STORAGE_PATH_09}:/var/www/file_store/09_file_storage
      - ${DJANGO_SQLITE_DATABASE_MOUNT_PATH}:${DJANGO_SQLITE_DATABASE_PATH}
    depends_on:
      - mongo-db-1
      - redis
    networks:
      - backend
      - frontend

  nginx:
    platform: "linux/amd64"
    build:
      context: ./
      dockerfile: Dockerfile_NGINX
    restart: unless-stopped
    depends_on:
      - web
    volumes:
      - ./env/nginx:/etc/nginx/conf.d
      - ./env/nginx/live/:/etc/letsencrypt/live/
      #- ./firmware-droid-client/build:/usr/share/nginx/html
      - ./source/static:/usr/share/nginx/django_static
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend

  mongo-db-1:
    image: mongo:6.0.10
    container_name: mongo-db-1
    restart: unless-stopped
    user: 1000:1000
    env_file:
      - ./.env
    ports:
      - "27017:27017"
    volumes:
      - ./env/mongo/init/:/docker-entrypoint-initdb.d/
      - ./env/mongo/auth/cluster.key:/etc/mongodb/cluster.key
      - ${LOCAL_MONGO_DB_PATH_NODE1}:/data/db
    command: mongod --bind_ip_all --auth --port 27017 --replSet ${MONGODB_REPLICA_SET} --keyFile /etc/mongodb/cluster.key --dbpath /data/db
    networks:
      - backend
    healthcheck:
      # echo 'db.runCommand("ping").ok' | mongo mongo-db-1:27017/FirmwareDroid --quiet
      test: curl --connect-timeout 10 --silent --show-error 127.0.0.1:27017
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    platform: "linux/amd64"
    image: redis:7.2.0
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${REDIS_CONFIG_PATH}:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - backend

  extractor-worker-high-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: docker/base/Dockerfile_extractor
    container_name: extractor-worker-high-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
      - ${LOCAL_STORAGE_PATH_00}:/var/www/file_store/00_file_storage
      - ${LOCAL_STORAGE_PATH_01}:/var/www/file_store/01_file_storage
      - ${LOCAL_STORAGE_PATH_02}:/var/www/file_store/02_file_storage
      - ${LOCAL_STORAGE_PATH_03}:/var/www/file_store/03_file_storage
      - ${LOCAL_STORAGE_PATH_04}:/var/www/file_store/04_file_storage
      - ${LOCAL_STORAGE_PATH_05}:/var/www/file_store/05_file_storage
      - ${LOCAL_STORAGE_PATH_06}:/var/www/file_store/06_file_storage
      - ${LOCAL_STORAGE_PATH_07}:/var/www/file_store/07_file_storage
      - ${LOCAL_STORAGE_PATH_08}:/var/www/file_store/08_file_storage
      - ${LOCAL_STORAGE_PATH_09}:/var/www/file_store/09_file_storage
    env_file:
      - ./.env
    command: rqworker --logging_level INFO --name extractor-worker-high-1 --url redis://:${REDIS_PASSWORD}@redis:6379/0 high-python
    networks:
      - backend
    # TODO Security enhancement / compatibility - replace/remove access right
    privileged: true

  apk_scanner-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_apk_scanner
    container_name: apk_scanner-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
      - ${LOCAL_STORAGE_PATH_00}:/var/www/file_store/00_file_storage
      - ${LOCAL_STORAGE_PATH_01}:/var/www/file_store/01_file_storage
      - ${LOCAL_STORAGE_PATH_02}:/var/www/file_store/02_file_storage
      - ${LOCAL_STORAGE_PATH_03}:/var/www/file_store/03_file_storage
      - ${LOCAL_STORAGE_PATH_04}:/var/www/file_store/04_file_storage
      - ${LOCAL_STORAGE_PATH_05}:/var/www/file_store/05_file_storage
      - ${LOCAL_STORAGE_PATH_06}:/var/www/file_store/06_file_storage
      - ${LOCAL_STORAGE_PATH_07}:/var/www/file_store/07_file_storage
      - ${LOCAL_STORAGE_PATH_08}:/var/www/file_store/08_file_storage
      - ${LOCAL_STORAGE_PATH_09}:/var/www/file_store/09_file_storage
    env_file:
      - ./.env
    command: rqworker --logging_level INFO --name apk_scanner-worker-1 --url redis://:${REDIS_PASSWORD}@redis:6379/0 default-python
    networks:
      - backend

#  frontend:
#    platform: "linux/amd64"
#    build:
#      context: ./
#      dockerfile: ./firmware-droid-client/Dockerfile
#    image: firmwaredroid-frontend
#    command: sleep infinity

networks:
  frontend:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
  backend:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450

