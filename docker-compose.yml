version: '3.7'
services:
  web:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: docker/base/Dockerfile_backend
    image: firmwaredroid-backend-worker
    container_name: firmwaredroid-backend
    working_dir: /var/www/
    restart: unless-stopped
    env_file:
      - ./.env
    expose:
      - 5000
    volumes:
      - .:/var/www/
    depends_on:
      - mongo-db-1
      - redis
    networks:
      - backend
      - frontend

  nginx:
    platform: "linux/amd64"
    #container_name: nginx-frontend
    build:
      context: ./
      dockerfile: Dockerfile_NGINX
    restart: unless-stopped
    depends_on:
      - web
    volumes:
      - ./env/nginx:/etc/nginx/conf.d
      - ./env/certbot/conf:/etc/letsencrypt
      - ./env/certbot/www:/var/www/certbot
      #- ./firmware-droid-client/build:/usr/share/nginx/build
    ports:
      - "80:80"
      - "443:443"
      - "5602:5602"
    networks:
      - frontend

  mongo-db-1:
    image: mongo:6.0.10
    container_name: mongo-db-1
    restart: unless-stopped
    user: 1000:1000
    env_file:
      - ./.env
    ports:
      - "27017:27017"
    volumes:
      - ./env/mongo/init/:/docker-entrypoint-initdb.d/
      - ./env/mongo/auth/cluster.key:/etc/mongodb/cluster.key
    networks:
      - backend
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo-db-1:27017/test --quiet
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo-init:
    image: mongo:6.0.10
    env_file:
      - ./.env
    links:
      - mongo-db-1:mongo-db-1
    depends_on:
      - mongo-db-1
    networks:
      - backend
    volumes:
      - ./source/database/mongo_replica_set_setup.sh:/source/mongo_replica_set_setup.sh
    restart: "no"
    entrypoint: [ "bash", "./source/mongo_replica_set_setup.sh" ]

  redis:
    platform: "linux/amd64"
    image: redis:7.2.0
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - backend

  extractor-worker-high-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: docker/base/Dockerfile_extractor
    container_name: extractor-worker-high-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./.env
    #command: sleep infinity
    command: rqworker --name extractor-worker-high-1 --url redis://redis:6379/ high --path /var/www/ --path /var/www/source
    networks:
      - backend
    # TODO Security enhancement / compatibility - replace/remove access right
    privileged: true
    #cap_add:
    #  - SYS_ADMIN

#  fuzzyhash-worker-1:
#    platform: "linux/amd64"
#    build:
#      context: .
#      dockerfile: ./docker/base/Dockerfile_fuzzyhash
#    container_name: fuzzyhash-worker-1
#    restart: unless-stopped
#    depends_on:
#      - redis
#      - extractor-worker-high-1
#    volumes:
#      - .:/var/www/
#      - /var/run/docker.sock:/var/run/docker.sock
#    env_file:
#      - ./.env
#    command: rqworker --name fuzzyhash-worker-1 --url redis://redis:6379/ fuzzyhash
#    networks:
#      - backend
#    # TODO Security enhancement / compatibility - replace/remove access right
#    privileged: true

  extractor-worker-default-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: docker/base/Dockerfile_extractor
    container_name: extractor-worker-default-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    #command: sleep infinity
    command: rqworker --name extractor-worker-default-1 --url redis://redis:6379/ default
    networks:
      - backend

  apk_scanner-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_apk_scanner
    container_name: apk_scanner-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    #command: sleep infinity
    command: rqworker --name apk_scanner-worker-1 --url redis://:${REDIS_PASSWORD}@redis:6379/0 high-python
    networks:
      - backend

  androguard-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_androguard
    container_name: androguard-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    command: rqworker --name androguard-worker-1 --url redis://redis:6379/ androguard
    networks:
      - backend

  androwarn-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_androwarn
    container_name: androwarn-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    command: rqworker --name androwarn-worker-1 --url redis://redis:6379/ androwarn
    networks:
      - backend

  apkid-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_apkid
    container_name: apkid-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    command: rqworker --name apkid-worker-1 --url redis://redis:6379/ apkid
    networks:
      - backend

  exodus-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_exodus
    container_name: exodus-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    command: rqworker --name exodus-worker-1 --url redis://redis:6379/ exodus
    networks:
      - backend

  frida-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_frida
    container_name: frida-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    command: rqworker --name frida-worker-1 --url redis://redis:6379/ frida
    networks:
      - backend

  qark-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_qark
    container_name: qark-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    command: rqworker --name qark-worker-1 --url redis://redis:6379/ qark
    networks:
      - backend

  quark_engine-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_quark_engine
    container_name: quark_engine-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    command: rqworker --name quark_engine-worker-1 --url redis://redis:6379/ quark_engine
    networks:
      - backend

  super-android-analyzer-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_super_android_analyzer
    container_name: super_android_analyzer-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    command: rqworker --name super_android_analyzer-worker-1 --url redis://redis:6379/ super_android_analyzer
    networks:
      - backend

  virustotal-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_virustotal
    container_name: virustotal-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    command: rqworker --name virustotal-worker-1 --url redis://redis:6379/ virustotal
    networks:
      - backend

  apkleaks-worker-1:
    platform: "linux/amd64"
    user: www
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_apkleaks
    container_name: apkleaks-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - .:/var/www/
    env_file:
      - ./.env
    command: rqworker --name apkleaks-worker-1 --url redis://redis:6379/ apkleaks
    networks:
      - backend


networks:
  frontend:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
  backend:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450

