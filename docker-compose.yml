version: '3.7'
services:
  web:
    build: .
    container_name: flask-web
    working_dir: /var/www
    restart: unless-stopped
    env_file:
      - ./.env
    expose:
      - "5000"
    volumes:
      - $PWD:/var/www/
    depends_on:
      - database
      - redis
    networks:
      - backend
      - frontend

  database:
    image: mongo:4.2.8-bionic
    container_name: mongo-db
    restart: unless-stopped
    command: mongod --auth
    env_file:
      - ./.env
    ports:
      - "27017:27017"
    volumes:
      - $PWD/env/mongo/:/docker-entrypoint-initdb.d/
    networks:
      - backend
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    container_name: nginx-frontend
    build:
      context: ./
      dockerfile: Dockerfile_NGINX
    restart: unless-stopped
    depends_on:
      - web
    volumes:
      - $PWD/env/nginx:/etc/nginx/conf.d
      - $PWD/env/certbot/conf:/etc/letsencrypt
      - $PWD/env/certbot/www:/var/www/certbot
      - $PWD/firmware-droid-client/build:/usr/share/nginx/build
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend

  firmware-worker:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_firmware
    container_name: firmware-worker
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./.env
    command: rqworker --name firmware-worker --url redis://redis:6379/ high
    networks:
      - backend
    privileged: true

  firmware-worker-high-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_firmware
    container_name: firmware-worker-high-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./.env
    command: rqworker --name firmware-worker-high-1 --url redis://redis:6379/ high
    networks:
      - backend
    privileged: true

  fuzzyhash-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_fuzzyhash
    container_name: fuzzyhash-worker-1
    restart: unless-stopped
    depends_on:
      - redis
      - firmware-worker
    volumes:
      - $PWD:/var/www/
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./.env
    command: rqworker --name fuzzyhash-worker-1 --url redis://redis:6379/ fuzzyhash
    networks:
      - backend
    privileged: true

  firmware-worker-default-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_firmware
    container_name: firmware-worker-default-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name firmware-worker-default-1 --url redis://redis:6379/ default
    networks:
      - backend

  androguard-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_androguard
    container_name: androguard-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name androguard-worker-1 --url redis://redis:6379/ androguard
    networks:
      - backend

  androwarn-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_androwarn
    container_name: androwarn-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name androwarn-worker-1 --url redis://redis:6379/ androwarn
    networks:
      - backend

  apkid-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_apkid
    container_name: apkid-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name apkid-worker-1 --url redis://redis:6379/ apkid
    networks:
      - backend

  exodus-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_exodus
    container_name: exodus-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name exodus-worker-1 --url redis://redis:6379/ exodus
    networks:
      - backend

  frida-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_frida
    container_name: frida-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name frida-worker-1 --url redis://redis:6379/ frida
    networks:
      - backend

  qark-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_qark
    container_name: qark-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name qark-worker-1 --url redis://redis:6379/ qark
    networks:
      - backend

  quark_engine-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_quark_engine
    container_name: quark_engine-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name quark_engine-worker-1 --url redis://redis:6379/ quark_engine
    networks:
      - backend

  super-android-analyzer-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_super_android_analyzer
    container_name: super_android_analyzer-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name super_android_analyzer-worker-1 --url redis://redis:6379/ super_android_analyzer
    networks:
      - backend

  virustotal-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_virustotal
    container_name: virustotal-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name virustotal-worker-1 --url redis://redis:6379/ virustotal
    networks:
      - backend

  apkleaks-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_apkleaks
    container_name: apkleaks-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name apkleaks-worker-1 --url redis://redis:6379/ apkleaks
    networks:
      - backend

  bigmac-worker-1:
    build:
      context: .
      dockerfile: ./docker/base/Dockerfile_bigmac
    container_name: bigmac-worker-1
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - $PWD:/var/www/
    env_file:
      - ./.env
    command: rqworker --name bigmac-worker-1 --url redis://redis:6379/ bigmac
    networks:
      - backend

  redis:
    image: redis:6-buster
    container_name: redis
    command: redis-server
    ports:
      - "6379:6379"
    networks:
      - backend

networks:
  frontend:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
  backend:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450